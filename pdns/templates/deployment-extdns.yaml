apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "extpdns.fullname" . }}-extdns
  labels:
    {{- include "extpdns.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.extdns.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "extpdns.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "extpdns.selectorLabels" . | nindent 8 }}
    spec:
      # Only use if you're also using RBAC
      # serviceAccountName: external-dns
      {{- with .Values.extDnsImage.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "extpdns.serviceAccountName" . }}
      containers:
      - name: external-dns
        image: registry.opensource.zalan.do/teapot/external-dns:latest
        env:
        - name: EXTERNAL_DNS_PDNS_API_KEY
          valueFrom:
            secretFrom:
              name: {{ include "extpdns-persist.fullname" . }}
              key: api-key
        args:
        - --source={{ .Values.extdns.source }} # service/ingress/both
        - --provider=pdns
        - --pdns-server={{ include "extpdns.fullname" . }}
        #- --pdns-api-key=$(PDNS_API_KEY) # env var
        - --txt-owner-id={{ .Values.extdns.owner }}
        {{- if .Values.pdns.zones }}
        # will make ExternalDNS see only the zones matching provided domain; omit to process all available zones in PowerDNS
        - --domain-filter={{ join "," .Values.pdns.zones }}
        {{- end }}
        - --log-level=debug
        - --interval=30s

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "extpdns.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PDNS_LAUNCH
              value: gpgsql
          volumeMounts:
            - name: etc-config
              mountPath: "/etc/powerdns/config"
              readOnly: true
            - name: etc-db
              mountPath: "/etc/powerdns/db"
              readOnly: true
            - name: etc-secret
              mountPath: "/etc/powerdns/secret"
              readOnly: true
          ports:
            - name: dns
              containerPort: 53
              protocol: UDP
            - name: http
              containerPort: 80
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: etc-config
        configMap:
          name: {{ include "extpdns.fullname" . }}-config
      - name: etc-db
        secret:
          secretName: {{ .Values.persist.db.user }}.{{ include "extpdns-persist.fullname" . }}{{ .Values.persist.db.suffix }}
          items:
          - key: username
            path: gpgsql-user
          - key: password
            path: gpgsql-password
      - name: etc-secret
        secret:
          secretName: {{ include "extpdns-persist.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
